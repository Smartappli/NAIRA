@startuml
skinparam backgroundColor #FAFAFA
skinparam classAttributeIconSize 0
skinparam classFontSize 14
skinparam classFontColor #000000

title Document Models for RAG System

' --- Base Classes ---
class BaseModel {
  + created_at : DateTime
  + updated_at : DateTime
  + id : UUID
}

class ProcessingStatusModel {
  + status : String
  + status_message : String
  + processing_started_at : DateTime
  + processing_completed_at : DateTime
  + mark_processing(message) : void
  + mark_completed(message) : void
  + mark_failed(message) : void
}

class MetadataModel {
  + metadata : JSON
  + get_metadata(key, default) : Any
  + set_metadata(key, value) : void
  + update_metadata(data) : void
}

class SoftDeleteModel {
  + is_deleted : Boolean
  + deleted_at : DateTime
  + delete() : void
  + hard_delete() : void
  + restore() : void
}

' --- Document Class ---
class Document {
  + knowledge_base : KnowledgeBase
  + title : String
  + content : Text
  + file : File
  + file_type : String
  + file_size : Integer
  + mime_type : String
  + char_count : Integer
  + word_count : Integer
  + token_count : Integer
  + language : String
  + quality_score : Float
  + chunk_count : Integer
  + uploaded_by : User
  + save() : void
  + delete() : void
  + calculate_content_metrics() : void
  + get_file_extension() : String
  + is_image() : Boolean
  + is_text_based() : Boolean
  + can_extract_text() : Boolean
}

' --- Document Chunk Class ---
class DocumentChunk {
  + document : Document
  + content : Text
  + chunk_index : Integer
  + start_char : Integer
  + end_char : Integer
  + char_count : Integer
  + word_count : Integer
  + token_count : Integer
  + quality_score : Float
  + coherence_score : Float
  + is_embedded : Boolean
  + embedding_model : String
  + summary : Text
  + keywords : JSON
  + entities : JSON
  + save() : void
  + calculate_metrics() : void
  + get_context_window(window_size) : List[DocumentChunk]
  + get_preview(max_length) : String
}

' --- Document Processing Task Class ---
class DocumentProcessingTask {
  + document : Document
  + task_type : String
  + task_id : String
  + progress : Float
  + result : JSON
  + error_details : Text
}

' --- Relationships ---
BaseModel <|-- Document
BaseModel <|-- DocumentChunk
BaseModel <|-- DocumentProcessingTask
ProcessingStatusModel <|-- Document
MetadataModel <|-- Document
SoftDeleteModel <|-- Document
Document --> KnowledgeBase : has
Document --> User : uploaded_by
Document --> DocumentChunk : contains
Document --> DocumentProcessingTask : tracks
DocumentChunk --> Document : belongs_to

@enduml
